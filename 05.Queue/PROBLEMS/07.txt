Problem Statement



You are working on a text processing system for a search engine. As part of the system, you need to implement a pattern-matching algorithm using a sliding window approach. 



Given a large text document and a pattern, you are required to find all occurrences of the pattern in the text document efficiently.



Your task is to write a program that performs the following operations:

Read the large text document and store it in memory.
Read the pattern from the user.
Implement a sliding window algorithm using a linked list-based deque to find all occurrences of the pattern in the text document.
Display the positions (starting indices) of all occurrences of the pattern in the text document.


Write a program to implement the above operations and display the positions of all occurrences of the pattern in the text document.



Your program should prompt the user to enter the required inputs and then output the positions of all occurrences of the pattern.



Note: This is a sample question asked in TCS recruitment.

Input format :
The first line of input consists of a sequence of strings.

The second line consists of the pattern to be found in the given string.

Output format :
If the pattern is found in the string, print the index or indexes where the pattern occurs. (index starts from 0)

If the pattern is not found, print "Pattern not found".

If the pattern is longer than the string, print "Pattern is longer than the string".



Refer to the sample output for the exact text and format.

Code constraints :
The strings are case-sensitive.

Sample test cases :
Input 1 :
abcdabcdeabcdabcdeabcdabcde
abcd
Output 1 :
Pattern found at index 0
Pattern found at index 4
Pattern found at index 9
Pattern found at index 13
Pattern found at index 18
Pattern found at index 22
Input 2 :
abcdefghij
abcdefghijkl
Output 2 :
Pattern is longer than the string
Input 3 :
Harry Potter
harry
Output 3 :
Pattern not found


------------------------------------------------------------------------------------------------
Problem Statement



You are tasked with implementing a double-ended queue data structure using a linked list. A deque is a linear data structure that supports operations for adding and removing elements at both ends. 



Your program should provide the following functionality:

Initialize an empty deque.
Check if the deque is empty.
Insert elements in the deque.
Display the odd and even elements separately.
Input format :
The input consists of the elements that should be inserted in the deque.

The input is terminated by entering -1.

Output format :
The output prints the even and odd elements in the given deque.



Refer to the sample output for the exact text and format.

Sample test cases :
Input 1 :
1
2
3
4
-1
Output 1 :
Even elements: 2 4 
Odd elements: 1 3 
Input 2 :
1
2
-1
Output 2 :
Even elements: 2 
Odd elements: 1 
-------------------------------------------------------------------------------------------------------
Problem Statement



Bob is a software developer working on a project that involves processing data using a double-ended queue.  As part of his task, he needs to count the number of elements in the deque and display the result to the user.



Write a program that Bob can use to count the number of elements in the deque and print the result.

Input format :
The input consists of the elements of the dequeue.

The input is terminated by entering -1.

Output format :
The output prints the count of the elements in the deque.



Refer to the sample output for the exact text and format.

Sample test cases :
Input 1 :
1
2
3
4
-1
Output 1 :
Number of elements in the deque: 4
Input 2 :
17
29
36
-1
Output 2 :
Number of elements in the deque: 3
--------------------------------------------------------------------------------------------------
Problem Statement



Olivia is working on a data processing project that involves analyzing a list of user IDs. As part of her task, she needs to display the user IDs without duplicates using a double-ended queue.



Olivia has a deque that stores a collection of user IDs. The deque is initially empty. 



Write a program that Olivia can use to print the user IDs without duplicates from the deque.

Input format :
The input consists of the elements of the dequeue.

The input is terminated by entering -1.

Output format :
The output prints the elements in the given dequeue, without duplicates.

Sample test cases :
Input 1 :
4
3
3
2
2
1
-1
Output 1 :
4 3 2 1 
Input 2 :
11
2
-1
Output 2 :
11 2 
-----------------------------------------------------------------